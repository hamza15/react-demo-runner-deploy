version: 2.1

orbs:
  node: circleci/node@3.0.1
  cypress: cypress-io/cypress@1.25.1
  aws-ecr: circleci/aws-ecr@6.12.0
  aws-eks: circleci/aws-eks@1.0.0
  helm: circleci/helm@1.2.0
  terraform: circleci/terraform@2.1.0

workflows:
  build_test_deploy:
    jobs:
      - build
      - unit_tests:
          requires:
            - build
      - cypress/run:
          requires:
            - unit_tests
<<<<<<< HEAD
      - deploy_runner

=======
      - aws-ecr/build-and-push-image:
          executor:
            name: aws-ecr/default
            use-docker-layer-caching: true
          context: rp-deploy-secrets
          name: build_push_ecr
          tag: $CIRCLE_SHA1
          repo: react-demo-runner-deploy
          requires:
            - cypress/run
>>>>>>> 72f80eea89159dac742af93b942caf6f5c9da41f
jobs:
  build:
    executor: node
    steps:
      - checkout
      - node/install-packages:
          override-ci-command: CYPRESS_INSTALL_BINARY=0 npm ci
  unit_tests:
    parallelism: 2
    executor: node
    steps:
      - checkout
      - node/install-packages:
          override-ci-command: CYPRESS_INSTALL_BINARY=0 npm ci  
      - run:
          name: Test application 
          command: |
            TEST=$(circleci tests glob **/src/**/*.test.js | circleci tests split --split-by=timings)
            npm test $TEST
      - store_test_results:
          path: ~/project/test-results
      - store_artifacts:
          path: ~/project/test-results/junit.xml
  deploy_runner:
    machine: true
    resource_class: ryanpedersen/runner-deploy-demo
    steps:
      - run: echo "Hi I'm on Runners!"

executors:
  node:
    docker: 
      - image: cimg/node:14.0.0
  base:
    docker:
      - image: cimg/base:stable